name: Docker

on:  
  workflow_dispatch:
  push:
  schedule:
    - cron:  '0 18 * * 5' # Run once at end of week

env:
  DOCKER_IMAGE_BASE: ghcr.io/${{ github.repository }}
  DOCKER_TF_TMP: twsl/cuda-tf:latest

jobs:
  cuda-tags:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Matrix
        id: set-matrix
        run: strg=`cat strategy.json` && echo '::set-output name=matrix::'${strg}
      
  build:
    needs: cuda-tags
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.cuda-tags.outputs.matrix)}}
    env:
      DOCKER_TAG: ${{ matrix.tags }}
    steps:
      - name: Tag
        run: echo $DOCKER_TAG

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: 'jupyter/docker-stacks'
          fetch-depth: 100
      
      - name: Checkout Own
        uses: actions/checkout@v2
        with:
          path: own
      
      - uses: marceloprado/has-changed-path@v1
        id: changed-base
        with:
          paths: base-notebook
      
      - uses: marceloprado/has-changed-path@v1
        id: changed-minimal
        with:
          paths: base-notebook minimal-notebook
      
      - uses: marceloprado/has-changed-path@v1
        id: changed-scipy
        with:
          paths: base-notebook minimal-notebook scipy-notebook
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      
      - name: Build tensorflow support
        if: github.event_name == 'workflow_dispatch' || steps.changed-base.outputs.changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: own
          push: false
          load: true
          platforms: linux/amd64
          tags: |
            ${{ env.DOCKER_TF_TMP }}
          build-args: |
            ROOT_CONTAINER=nvidia/cuda:${{ env.DOCKER_TAG }}
          #cache-from: type=local,src=/tmp/.buildx-cache
          #cache-to: type=local,dest=/tmp/.buildx-cache
      
      - name: Inspect
        run: |
          docker image inspect ${{ env.DOCKER_TF_TMP }}

        # base-notebook
      - name: Docker meta base-notebook        
        if: steps.changed-base.outputs.changed == 'true'
        id: docker_meta_base
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.DOCKER_IMAGE_BASE }}/base-notebook
          tag-custom: ${{ env.DOCKER_TAG }}
          tag-custom-only: true

      - name: Build and push base-notebook
        if: github.event_name == 'workflow_dispatch' || steps.changed-base.outputs.changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./base-notebook/
          file: ./base-notebook/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_base.outputs.tags }}
          labels: ${{ steps.docker_meta_base.outputs.labels }}
          build-args: |
            ROOT_CONTAINER=${{ env.DOCKER_TF_TMP }}
      
        # minimal-notebook
      - name: Docker meta minimal-notebook
        if: steps.changed-minimal.outputs.changed == 'true'
        id: docker_meta_minimal
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.DOCKER_IMAGE_BASE }}/minimal-notebook
          tag-custom: ${{ env.DOCKER_TAG }}
          tag-custom-only: true

      - name: Build and push minimal-notebook
        if: github.event_name == 'workflow_dispatch' || steps.changed-minimal.outputs.changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./minimal-notebook/
          file: ./minimal-notebook/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_minimal.outputs.tags }}
          labels: ${{ steps.docker_meta_minimal.outputs.labels }}
          build-args: |
            BASE_CONTAINER=${{ env.DOCKER_IMAGE_BASE }}/base-notebook:${{ env.DOCKER_TAG }}
      
        # scipy-notebook
      - name: Docker meta scipy-notebook
        if: steps.changed-scipy.outputs.changed == 'true'
        id: docker_meta_scipy
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.DOCKER_IMAGE_BASE }}/scipy-notebook
          tag-custom: ${{ env.DOCKER_TAG }}
          tag-custom-only: true

      - name: Build and push scipy-notebook
        id: docker_build
        if: github.event_name == 'workflow_dispatch' || steps.changed-scipy.outputs.changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./scipy-notebook/
          file: ./scipy-notebook/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_scipy.outputs.tags }}
          labels: ${{ steps.docker_meta_scipy.outputs.labels }}
          build-args: |
            BASE_CONTAINER=${{ env.DOCKER_IMAGE_BASE }}/minimal-notebook:${{ env.DOCKER_TAG }}


      - name: Image digest
        if: steps.changed-scipy.outputs.changed == 'true'
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Check manifest
        if: github.event_name == 'workflow_dispatch' && steps.changed-scipy.outputs.changed == 'true'
        run: |
          docker buildx imagetools inspect ${{ env.DOCKER_IMAGE_BASE }}/scipy-notebook:${{ steps.docker_meta_scipy.outputs.version }}
      
      - name: Dump context
        if: always()
        uses: crazy-max/ghaction-dump-context@v1
